import { useState, useEffect } from "react";
import AudioPlayer from "../../../components/UI/AudioPlayer";

function TypingTest({ onCompleteWord }) {
  const [favorites, setFavorites] = useState([]);
  const [current, setCurrent] = useState(0);
  const [input, setInput] = useState("");
  const [feedback, setFeedback] = useState(null);
  const [showGerman, setShowGerman] = useState(true); // üëà —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –Ω–µ–º–µ—Ü–∫–æ–≥–æ —Å–ª–æ–≤–∞

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  useEffect(() => {
    const fav = JSON.parse(localStorage.getItem("favorites") || "[]");
    setFavorites(fav);
  }, []);

  const card = favorites[current];

  // –ê–≤—Ç–æ–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–ª–æ–≤–∞
  useEffect(() => {
    if (card) {
      const utterance = new SpeechSynthesisUtterance(card.german);
      utterance.lang = "de-DE";
      speechSynthesis.speak(utterance);
    }
  }, [card]);

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  const normalize = (str) =>
    str
      ?.trim()
      .toLowerCase()
      .replace(/—ë/g, "–µ")
      .replace(/[^a-z–∞-—è0-9\s]/gi, "")
      .replace(/\s+/g, " ")
      .trim();

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!card) return;

    const normalizedInput = normalize(input);
    const correct =
      normalizedInput === normalize(card.russian) ||
      normalizedInput === normalize(card.german);

    onCompleteWord?.(card.german, correct);
    setFeedback(correct ? "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!" : "‚ùå –û—à–∏–±–∫–∞");

    setTimeout(() => {
      setCurrent((prev) => (prev + 1 < favorites.length ? prev + 1 : 0));
      setInput("");
      setFeedback(null);
    }, 800);
  };

  if (!favorites.length) {
    return (
      <p className="text-center mt-10">–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Å–ª–æ–≤–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!</p>
    );
  }

  return (
    <div className="p-4 bg-white rounded-xl shadow-lg flex flex-col items-center gap-4 w-full max-w-md mx-auto">
      {/* –ù–µ–º–µ—Ü–∫–æ–µ —Å–ª–æ–≤–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é) */}
      {showGerman && (
        <div className="text-2xl font-bold mb-2">{card.german}</div>
      )}

      <AudioPlayer word={card.german} />

      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –Ω–µ–º–µ—Ü–∫–æ–µ —Å–ª–æ–≤–æ */}
      <button
        onClick={() => setShowGerman((prev) => !prev)}
        className="text-sm text-blue-500 hover:underline"
      >
        {showGerman ? "–°–∫—Ä—ã—Ç—å –Ω–µ–º–µ—Ü–∫–æ–µ —Å–ª–æ–≤–æ" : "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–º–µ—Ü–∫–æ–µ —Å–ª–æ–≤–æ"}
      </button>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
      <div className="text-sm text-gray-500 mb-2 text-center">
        –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ <b>—Ä—É—Å—Å–∫–æ–º</b> –∏–ª–∏ <b>–Ω–µ–º–µ—Ü–∫–æ–º</b>:
      </div>

      {/* –§–æ—Ä–º–∞ */}
      <form onSubmit={handleSubmit} className="flex flex-col gap-2 w-full">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          className="border p-2 rounded w-full"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥..."
        />
        <button
          type="submit"
          className="px-4 py-2 bg-blue-500 text-white rounded"
        >
          –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
        </button>
      </form>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
      {feedback && <div className="text-xl">{feedback}</div>}

     
    </div>
  );
}

export default TypingTest;
